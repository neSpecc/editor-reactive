{"id":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","dependencies":[{"name":"/Users/specc/specc/editor-reactive/package.json","includedInParent":true,"mtime":1607191062708},{"name":"/Users/specc/specc/editor-reactive/node_modules/html-dom-parser/package.json","includedInParent":true,"mtime":499162500000},{"name":"./domparser","loc":{"line":1,"column":24},"parent":"/Users/specc/specc/editor-reactive/node_modules/html-dom-parser/lib/html-to-dom-client.js","resolved":"/Users/specc/specc/editor-reactive/node_modules/html-dom-parser/lib/domparser.js"},{"name":"./utilities","loc":{"line":2,"column":24},"parent":"/Users/specc/specc/editor-reactive/node_modules/html-dom-parser/lib/html-to-dom-client.js","resolved":"/Users/specc/specc/editor-reactive/node_modules/html-dom-parser/lib/utilities.js"}],"generated":{"js":"var domparser = require('./domparser');\nvar utilities = require('./utilities');\n\nvar formatDOM = utilities.formatDOM;\nvar isIE9 = utilities.isIE(9);\n\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML and reformats DOM nodes output.\n *\n * @param  {String} html - The HTML string.\n * @return {Array}       - The formatted DOM nodes.\n */\nfunction parseDOM(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!html) {\n    return [];\n  }\n\n  // match directive\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n\n  if (match && match[1]) {\n    directive = match[1];\n\n    // remove directive in IE9 because DOMParser uses\n    // MIME type 'text/xml' instead of 'text/html'\n    if (isIE9) {\n      html = html.replace(match[0], '');\n    }\n  }\n\n  return formatDOM(domparser(html), null, directive);\n}\n\nmodule.exports = parseDOM;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/html-dom-parser/lib/html-to-dom-client.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"../node_modules/html-dom-parser/lib/html-to-dom-client.js":"var domparser = require('./domparser');\nvar utilities = require('./utilities');\n\nvar formatDOM = utilities.formatDOM;\nvar isIE9 = utilities.isIE(9);\n\nvar DIRECTIVE_REGEX = /<(![a-zA-Z\\s]+)>/; // e.g., <!doctype html>\n\n/**\n * Parses HTML and reformats DOM nodes output.\n *\n * @param  {String} html - The HTML string.\n * @return {Array}       - The formatted DOM nodes.\n */\nfunction parseDOM(html) {\n  if (typeof html !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!html) {\n    return [];\n  }\n\n  // match directive\n  var match = html.match(DIRECTIVE_REGEX);\n  var directive;\n\n  if (match && match[1]) {\n    directive = match[1];\n\n    // remove directive in IE9 because DOMParser uses\n    // MIME type 'text/xml' instead of 'text/html'\n    if (isIE9) {\n      html = html.replace(match[0], '');\n    }\n  }\n\n  return formatDOM(domparser(html), null, directive);\n}\n\nmodule.exports = parseDOM;\n"},"lineCount":42}},"error":null,"hash":"1f737c7ec30ed023a1894ec7a09f7b7e","cacheData":{"env":{}}}